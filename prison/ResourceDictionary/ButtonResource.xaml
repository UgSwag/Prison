<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    
    <Style x:Key="CaptureButton" TargetType="Button" BasedOn="{StaticResource CicleButton}">
        <Setter Property="Content" Value="Capture"></Setter>
    </Style>
    
    
    
    <!--Resource for the circle buttons-->
    <Style x:Key="CicleButton"  TargetType="Button">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border CornerRadius="100" Background="Green" >
                        <ContentPresenter x:Name="SignInButtonContentPresenter"
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                                />
                        

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers >
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Background" Value="{DynamicResource  SignInButtonBackGroundTextBrush}"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="Cursor"  Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
   
   
    <!--Resources for the SignUp Style start from here-->
    <Style x:Key="UISaveButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundTextButton}"/>
        <Setter Property="Background" Value="Green"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button }">
                    <Border x:Name="ButtonBorder"
                          CornerRadius="20"
                           RenderTransformOrigin="0.4,0.4">
                        <Grid>
                            <Border Grid.Row="0" CornerRadius="15,15,15,15" Background="{TemplateBinding Background}">
                            </Border>
                             <ContentPresenter x:Name="SignInButtonContentPresenter"
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                             />
                             <ContentControl x:Name="SignInControl" FontSize="35"
                                            FontFamily="NewRomans"
                                            />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers >
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Background" Value="{DynamicResource  SignInButtonBackGroundTextBrush}"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="Cursor"  Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--this the end-->
    
    
    <!--Resources for the SignOut button start from here-->
    <Style x:Key="UICancelButton" BasedOn="{StaticResource UISaveButton}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundTextButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder">
                        <Grid>    
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="0*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" CornerRadius="16,16,16,16">
                                <Border.Background >
                                    <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,1">
                                        <GradientStop Color="Red" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter x:Name="SignOutButtonContentPresenter"
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                              Content="SignOut"/>
                           
                        </Grid>
                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    
    <!--trigger styling of SignIn, SignOut and search buttons-->
    <Style x:Key="ButtonAnimation" TargetType="{x:Type Button}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard >

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard >

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    
    <!--Button Animation for buttons in this application-->
    
    <Style x:Key="MainButton" BasedOn="{StaticResource UISaveButton}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundTextButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                          CornerRadius="15"
                          RenderTransformOrigin="0.5,0.5"
                         >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="0*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" CornerRadius="5,5,5,5">
                                <Border.Background >
                                    <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,1">
                                        <GradientStop Color="#5e0231" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter x:Name="MainContentPresenter"
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                               />
                            <ContentControl x:Name="MainControl" FontSize="35"
                                            FontFamily="NewRomans"
                                            />
                        </Grid>
                    </Border>

                    <!--This is what transforms buttons on the main window-->
                    <ControlTemplate.Triggers>
                        <!--This happens when the button is enabled-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions >
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="ButtonBorder">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background"  TargetName="ButtonBorder" Value="{DynamicResource MainButtonsColorBrush}"/>
                        </MultiTrigger>

                        <!--This is what happens when the button is disabled-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="ButtonBorder">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.1" ScaleY="0.9"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background"  TargetName="ButtonBorder" Value="{DynamicResource MainButtonsColorBrush}"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource MainButtonsColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
       
    </Style>
    
    <!--Photo capturing button that directs you to page which enables this effect-->
    <Style x:Key="PhotoButton" BasedOn="{StaticResource MainButton}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundTextButton}"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                          CornerRadius="15"
                          RenderTransformOrigin="0.5,0.5"
                         >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="0*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" CornerRadius="25,10,25,10">
                                <Border.Background >
                                    <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,1">
                                        <GradientStop Color="purple" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter x:Name="MainContentPresenter"
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                               />
                            <ContentControl x:Name="MainControl" FontSize="35"
                                            FontFamily="NewRomans"
                                            />
                        </Grid>
                    </Border>
                    <!--This is what transforms buttons on the main window-->
                    <ControlTemplate.Triggers>
                        <!--This happens when the button is enabled-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions >
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="ButtonBorder">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background"  TargetName="ButtonBorder" Value="lightblue"/>
                        </MultiTrigger>

                        <!--This is what happens when the button is disabled-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="ButtonBorder">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.1" ScaleY="0.9"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource MainButtonsColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

   

    <Style TargetType="Button" x:Key="BigButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
            CornerRadius="5" 
            Background="#FF415360">
                        <ContentPresenter x:Name="ButtonContentPresenter"
              VerticalAlignment="Center"  
              HorizontalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextAlignment" Value="Center" />
                                </Style>
                                <Style TargetType="Image">
                                    <Setter Property="Width" Value="10" />
                                    <Setter Property="Margin" Value="10" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>